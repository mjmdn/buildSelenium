<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="1" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="11302" started-at="2019-03-23T18:45:55Z" finished-at="2019-03-23T18:46:06Z">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runner.Runner@5ae63ade]" name="runScenario" class="cucumber.api.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test name="Test" duration-ms="11302" started-at="2019-03-23T18:45:55Z" finished-at="2019-03-23T18:46:06Z">
      <class name="runner.Runner">
        <test-method status="PASS" signature="startReport()[pri:0, instance:runner.Runner@5ae63ade]" name="startReport" is-config="true" duration-ms="981" started-at="2019-03-23T18:45:54Z" finished-at="2019-03-23T18:45:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="setData()[pri:0, instance:runner.Runner@5ae63ade]" name="setData" is-config="true" duration-ms="1" started-at="2019-03-23T18:45:55Z" finished-at="2019-03-23T18:45:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setData -->
        <test-method status="PASS" signature="setUpClass()[pri:0, instance:runner.Runner@5ae63ade]" name="setUpClass" is-config="true" duration-ms="246" started-at="2019-03-23T18:45:55Z" finished-at="2019-03-23T18:45:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="PASS" signature="report()[pri:0, instance:runner.Runner@5ae63ade]" name="report" is-config="true" duration-ms="22" started-at="2019-03-23T18:45:55Z" finished-at="2019-03-23T18:45:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:runner.Runner@5ae63ade]" name="beforeMethod" is-config="true" duration-ms="7914" started-at="2019-03-23T18:45:55Z" finished-at="2019-03-23T18:46:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runner.Runner@5ae63ade]" name="runScenario" duration-ms="2640" started-at="2019-03-23T18:46:03Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2019-03-23T18:46:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:runner.Runner@5ae63ade]" name="afterMethod" is-config="true" duration-ms="306" started-at="2019-03-23T18:46:06Z" finished-at="2019-03-23T18:46:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:runner.Runner@5ae63ade]" name="tearDownClass" is-config="true" duration-ms="15" started-at="2019-03-23T18:46:06Z" finished-at="2019-03-23T18:46:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
        <test-method status="PASS" signature="stopReport()[pri:0, instance:runner.Runner@5ae63ade]" name="stopReport" is-config="true" duration-ms="779" started-at="2019-03-23T18:46:06Z" finished-at="2019-03-23T18:46:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopReport -->
      </class> <!-- runner.Runner -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
